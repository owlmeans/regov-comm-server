{"version":3,"file":"warmup.js","sourceRoot":"","sources":["../src/warmup.ts"],"names":[],"mappings":";;;;;AACA,oFAAqD;AACrD,oEAAsC;AACtC,gFAAiD;AACjD,sFAAuD;AACvD,sGAAkE;AAClE,4FAA6D;AAC7D,sEAAwC;AACxC,4EAA8C;AAE9C,6DAA2E;AAC3E,mCAAwE;AACxE,mCAA4C;AAC5C,mCAAqC;AACrC,oDAA2B;AAC3B,gDAAmD;AAEnD,MAAM,OAAO,GAAG,IAAA,iCAAgB,GAAE,CAAA;AAClC,OAAO,CAAC,aAAa,CAAC,qBAAY,EAAE,qBAAY,EAAE,kBAAS,CAAC,CAAA;AAC5D,OAAO,CAAC,aAAa,CAAC,eAAM,EAAE,iBAAQ,CAAC,CAAA;AACvC,OAAO,CAAC,UAAU,CAAC,gBAAM,CAAC,CAAA;AAC1B,OAAO,CAAC,aAAa,CAAC,oBAAW,CAAC,CAAA;AAClC,OAAO,CAAC,WAAW,CAAC,oBAAQ,EAAE,kBAAM,CAAC,CAAA;AACrC,OAAO,CAAC,WAAW,GAAG,qBAAmB,CAAA;AAEzC,IAAA,+BAAc,EAAC,+CAA+C,EAAE,IAAI,CAAC,SAAS,CAAC,yBAAS,CAAC,CAAC,CAAA;AAC1F,IAAA,+BAAc,EAAC,8CAA8C,EAAE,IAAI,CAAC,SAAS,CAAC,yBAAS,CAAC,CAAC,CAAA;AACzF,IAAA,+BAAc,EAAC,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,2BAAW,CAAC,CAAC,CAAA;AACvF,IAAA,+BAAc,EAAC,kCAAkC,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAI,CAAC,CAAC,CAAA;AACxE,IAAA,+BAAc,EAAC,2CAA2C,EAAE,IAAI,CAAC,SAAS,CAAC,4BAAY,CAAC,CAAC,CAAA;AACzF,IAAA,+BAAc,EAAC,mDAAmD,EAAE,IAAI,CAAC,SAAS,CAAC,oCAAe,CAAC,CAAC,CAAA;AACpG,IAAA,+BAAc,EAAC,8CAA8C,EAAE,IAAI,CAAC,SAAS,CAAC,+BAAe,CAAC,CAAC,CAAA;AAC/F,IAAA,+BAAc,EAAC,mCAAmC,EAAE,IAAI,CAAC,SAAS,CAAC,oBAAK,CAAC,CAAC,CAAA;AAC1E,IAAA,+BAAc,EAAC,sCAAsC,EAAE,IAAI,CAAC,SAAS,CAAC,uBAAQ,CAAC,CAAC,CAAA","sourcesContent":["\nimport authRequest from './schemas/auth-request.json'\nimport auth from './schemas/auth.json'\nimport didSchema from './schemas/did-schema.json'\nimport docSignature from './schemas/doc-signature.json'\nimport docSignatureReq from './schemas/doc-signature-request.json'\nimport groupMembership from './schemas/group-membership.json'\nimport group from './schemas/group.json'\nimport identity from './schemas/identity.json'\n\nimport { documentWarmer, getCryptoAdapter } from '@owlmeans/regov-ssi-core'\nimport { encodeBase58, decodeBase58, toBeArray, getBytes } from 'ethers'\nimport { sha256, randomBytes } from 'ethers'\nimport { HDNodeWallet } from 'ethers'\nimport crypto from 'crypto'\nimport { signSync, verify } from '@noble/secp256k1'\n\nconst adapter = getCryptoAdapter()\nadapter.setBase58Impl(encodeBase58, decodeBase58, toBeArray)\nadapter.setSha256Impl(sha256, getBytes)\nadapter.setAesImpl(crypto)\nadapter.setRandomImpl(randomBytes)\nadapter.setSecpImpl(signSync, verify)\nadapter.WalletClass = HDNodeWallet as any\n\ndocumentWarmer('https://owlmeans.com/schemas/did-schema.json#', JSON.stringify(didSchema))\ndocumentWarmer('https://owlmeans.com/schemas/did-schema.json', JSON.stringify(didSchema))\ndocumentWarmer('https://owlmeans.com/schema/auth-request', JSON.stringify(authRequest))\ndocumentWarmer('https://owlmeans.com/schema/auth', JSON.stringify(auth))\ndocumentWarmer('https://owlmeans.com/schema/doc-signature', JSON.stringify(docSignature))\ndocumentWarmer('https://owlmeans.com/schema/doc-signature-request', JSON.stringify(docSignatureReq))\ndocumentWarmer('https://owlmeans.com/schema/group-membership', JSON.stringify(groupMembership))\ndocumentWarmer('https://owlmeans.com/schema/group', JSON.stringify(group))\ndocumentWarmer('https://owlmeans.com/schema/identity', JSON.stringify(identity))"]}