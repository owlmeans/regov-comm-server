{"version":3,"file":"warmup.js","sourceRoot":"","sources":["../src/warmup.ts"],"names":[],"mappings":"AACA,OAAO,WAAW,MAAM,6BAA6B,CAAA;AACrD,OAAO,IAAI,MAAM,qBAAqB,CAAA;AACtC,OAAO,SAAS,MAAM,2BAA2B,CAAA;AACjD,OAAO,YAAY,MAAM,8BAA8B,CAAA;AACvD,OAAO,eAAe,MAAM,sCAAsC,CAAA;AAClE,OAAO,eAAe,MAAM,iCAAiC,CAAA;AAC7D,OAAO,KAAK,MAAM,sBAAsB,CAAA;AACxC,OAAO,QAAQ,MAAM,yBAAyB,CAAA;AAE9C,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAA;AAC3E,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAA;AACxE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAA;AACrC,OAAO,MAAM,MAAM,QAAQ,CAAA;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AAEnD,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAA;AAClC,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE,YAAY,EAAE,SAAS,CAAC,CAAA;AAC5D,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AACvC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;AAC1B,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;AAClC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;AACrC,OAAO,CAAC,WAAW,GAAG,YAAmB,CAAA;AAEzC,cAAc,CAAC,+CAA+C,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAA;AAC1F,cAAc,CAAC,8CAA8C,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAA;AACzF,cAAc,CAAC,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAA;AACvF,cAAc,CAAC,kCAAkC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;AACxE,cAAc,CAAC,2CAA2C,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAA;AACzF,cAAc,CAAC,mDAAmD,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;AACpG,cAAc,CAAC,8CAA8C,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;AAC/F,cAAc,CAAC,mCAAmC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;AAC1E,cAAc,CAAC,sCAAsC,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAA","sourcesContent":["\nimport authRequest from './schemas/auth-request.json'\nimport auth from './schemas/auth.json'\nimport didSchema from './schemas/did-schema.json'\nimport docSignature from './schemas/doc-signature.json'\nimport docSignatureReq from './schemas/doc-signature-request.json'\nimport groupMembership from './schemas/group-membership.json'\nimport group from './schemas/group.json'\nimport identity from './schemas/identity.json'\n\nimport { documentWarmer, getCryptoAdapter } from '@owlmeans/regov-ssi-core'\nimport { encodeBase58, decodeBase58, toBeArray, getBytes } from 'ethers'\nimport { sha256, randomBytes } from 'ethers'\nimport { HDNodeWallet } from 'ethers'\nimport crypto from 'crypto'\nimport { signSync, verify } from '@noble/secp256k1'\n\nconst adapter = getCryptoAdapter()\nadapter.setBase58Impl(encodeBase58, decodeBase58, toBeArray)\nadapter.setSha256Impl(sha256, getBytes)\nadapter.setAesImpl(crypto)\nadapter.setRandomImpl(randomBytes)\nadapter.setSecpImpl(signSync, verify)\nadapter.WalletClass = HDNodeWallet as any\n\ndocumentWarmer('https://owlmeans.com/schemas/did-schema.json#', JSON.stringify(didSchema))\ndocumentWarmer('https://owlmeans.com/schemas/did-schema.json', JSON.stringify(didSchema))\ndocumentWarmer('https://owlmeans.com/schema/auth-request', JSON.stringify(authRequest))\ndocumentWarmer('https://owlmeans.com/schema/auth', JSON.stringify(auth))\ndocumentWarmer('https://owlmeans.com/schema/doc-signature', JSON.stringify(docSignature))\ndocumentWarmer('https://owlmeans.com/schema/doc-signature-request', JSON.stringify(docSignatureReq))\ndocumentWarmer('https://owlmeans.com/schema/group-membership', JSON.stringify(groupMembership))\ndocumentWarmer('https://owlmeans.com/schema/group', JSON.stringify(group))\ndocumentWarmer('https://owlmeans.com/schema/identity', JSON.stringify(identity))"]}